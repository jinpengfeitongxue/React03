{"version":3,"sources":["reduxDemo/homereducer.js","reduxDemo/todosreducer.js","reduxDemo/store.js","reduxDemo/Todos.js","reduxDemo/Input.js","reduxDemo/Home.js","reduxDemo/App.js","index.js"],"names":["homereducer","state","username","data","action","type","todo","todolist","value","arr","splice","index","rootReducer","combineReducers","home","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","connect","console","log","mydata","props","map","item","idx","key","onClick","dispatch","onKeyDown","e","keyCode","target","useState","isShow","setShow","login","fetch","method","headers","then","res","json","name","toast","text","animating","App","ReactDOM","render","document","getElementById"],"mappings":"2JAYeA,EAXK,WAAuC,IAAtCC,EAAqC,uDAA/B,CAACC,SAAS,GAAGC,KAAK,IAAIC,EAAS,uCACtD,OAAOA,EAAOC,MACV,IAAK,QAED,MAAO,CAACH,SAASE,EAAOF,UAC5B,QACI,OAAOD,I,QCNfK,EAAO,CAAC,EAAE,EAAE,GAeDC,MAbf,WAAqC,IAAnBN,EAAkB,uDAAZK,EAAKF,EAAO,uCAChC,GAAgB,YAAbA,EAAOC,KAEN,MAAM,GAAN,mBAAWJ,GAAX,CAAiBG,EAAOI,QAE5B,GAAgB,YAAbJ,EAAOC,KAAiB,CAEvB,IAAII,EAAG,YAAOR,GAEd,OADAQ,EAAIC,OAAON,EAAOO,MAAM,GACjBF,EAEX,OAAOR,GCVPW,EAAcC,YAAgB,CAC9BP,OAAKQ,SAQMC,EALDC,YACNJ,EACAK,OAAOC,8BAAgCD,OAAOC,gC,QC6BvCC,eAPS,SAAClB,GAErB,OADAmB,QAAQC,IAAIpB,GACL,CACHqB,OAAOrB,EAAMK,QAINa,EArCD,SAACI,GAGX,OAFAH,QAAQC,IAAIE,GAGR,6BAEQA,EAAMD,OAAOE,KAAI,SAACC,EAAKC,GAAN,OACb,wBAAIC,IAAKD,GACJD,EACD,4BACIG,QAAS,WACLL,EAAMM,SAAS,CACXxB,KAAM,WACNM,MAAOe,MAJnB,wBCWTP,iBAnBD,SAACI,GAEX,OADAH,QAAQC,IAAIE,GAER,6BACI,2BACAO,UAAW,SAACC,GACQ,IAAbA,EAAEC,SACDT,EAAMM,SAAS,CACXxB,KAAK,WACLG,MAAMuB,EAAEE,OAAOzB,SAI3BH,KAAK,a,gBCiCFc,eAHS,SAAClB,GAAD,MAAY,CAChCC,SAAUD,EAAMa,KAAKZ,YAEViB,EA7CF,SAACI,GAAW,IAAD,EACKW,oBAAS,GADd,mBACbC,EADa,KACNC,EADM,KAEdC,EAAQ,WACVD,GAAQ,GAERE,MADU,4EACC,CACPC,OAAQ,OACRC,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFnB,EAAMM,SAAS,CACXxB,KAAM,QACNH,SAAUwC,EAAIvC,KAAKyC,OAEvBR,GAAQ,OAGpB,OACI,6BAEQb,EAAMrB,SACA,6BACIqB,EAAMrB,SACR,4BACI0B,QAAUS,GADd,iBAIF,4BACET,QAAUS,GADZ,gBAIV,kBAAC,IAAD,CACIQ,OAAK,EACLC,KAAK,wBACLC,UAAWZ,QCOZa,EATH,WACX,OAAO,kBAAC,IAAD,CAAUjC,MAAOA,GACvB,kBAAC,IAAD,KACC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,S,OCnCHkC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e1396b96.chunk.js","sourcesContent":["\r\nconst homereducer = (state={username:'',data:[]},action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            // Object.assign({},state,{username:'123'})\r\n            return {username:action.username}\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n}\r\n\r\nexport default homereducer;","\r\nlet todo = [1,2,3]\r\n\r\nfunction todolist(state=todo,action){\r\n    if(action.type=='ADD_TODO'){\r\n        // 不可变对象\r\n        return [...state,action.value]\r\n    }\r\n    if(action.type=='DEL_TODO'){\r\n        // action.index\r\n        let arr = [...state];\r\n        arr.splice(action.index,1);\r\n        return arr;\r\n    }\r\n    return state;\r\n}\r\nexport default todolist;\r\n","import {createStore,combineReducers} from 'redux';\r\nimport home from './homereducer';\r\nimport todo from './todosreducer';\r\n\r\nlet rootReducer = combineReducers({\r\n    todo,home\r\n})\r\n\r\nconst store = createStore(\r\n        rootReducer,\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n\r\nexport default store;\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nconst Todos = (props) => {\r\n    console.log(props);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.mydata.map((item,idx)=>(\r\n                    <li key={idx}>\r\n                        {item}\r\n                        <button\r\n                            onClick={()=>{\r\n                                props.dispatch({\r\n                                    type: \"DEL_TODO\",\r\n                                    index: idx\r\n                                })\r\n                            }}\r\n                        >删除</button>\r\n                    </li>\r\n                ))\r\n            }\r\n            {/* <button \r\n                onClick={()=>props.dispatch({\r\n                    type:\"add_todo\",\r\n                    value:'100000'\r\n                })}\r\n            >添加</button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    console.log(state);\r\n    return {\r\n        mydata:state.todo\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Todos)\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\nconst Input = (props) => {\r\n    console.log(props)\r\n    return(\r\n        <div>\r\n            <input \r\n            onKeyDown={(e)=>{\r\n                if(e.keyCode == 13){\r\n                    props.dispatch({\r\n                        type:'ADD_TODO',\r\n                        value:e.target.value\r\n                    })\r\n                }\r\n            }}\r\n            type='text'\r\n            />\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default connect()(Input)","import React,{useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ActivityIndicator } from 'antd-mobile'\r\n\r\nconst Home = (props) => {\r\n    const [isShow,setShow] = useState(false);\r\n    const login = () => {\r\n        setShow(true);\r\n        let url = 'https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\r\n        fetch(url, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                props.dispatch({\r\n                    type: \"LOGIN\",\r\n                    username: res.data.name\r\n                })\r\n                setShow(false);\r\n            })\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                props.username\r\n                    ? <div>\r\n                        { props.username }\r\n                        <button\r\n                            onClick={ login }\r\n                        >退出</button>\r\n                    </div>\r\n                    : <button\r\n                        onClick={ login }\r\n                    >登录</button>\r\n            }\r\n            <ActivityIndicator \r\n                toast\r\n                text=\"登录中...\"\r\n                animating={isShow}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    username: state.home.username\r\n})\r\nexport default connect(mapStateToProps)(Home);","// import React,{useState,useEffect} from 'react';\r\n// import { BrowserRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom';\r\n// import store from './store';\r\n// import { Provider } from 'react-redux';\r\n// import Todos from './Todos';\r\n// import Input from './Input'\r\n\r\n// redux react-redux\r\n// webpack\r\n// umi框架\r\n// Router（react-router）怎么实现的（源码）\r\n\r\n// const App = () => {\r\n//     console.log(store.getState());\r\n//     const [todos,setTodos] = useState(store.getState())\r\n//     useEffect(() => {\r\n//         store.subscribe(() => {\r\n//             setTodos( store.getState() )\r\n//         })\r\n//     }, [])\r\n//     return <div>\r\n//         {\r\n//             todos.map((item) => <li>{item}</li>)\r\n//         }\r\n//         <button onClick={() => {\r\n//             store.dispatch({type:'add_todo' , value:'456'})\r\n//         }}>添加</button>\r\n        \r\n//     </div>\r\n// }\r\nimport React,{useState,useEffect} from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom'\r\nimport store from './store';\r\nimport { Provider } from 'react-redux'\r\nimport Todos from './Todos';\r\nimport Input from './Input';\r\nimport Home from './Home';\r\n\r\n\r\nconst App = ()=>{\r\n\treturn <Provider store={store}>\r\n\t\t<Router>\r\n\t\t\t<Home />\r\n\t\t\t<Input />\r\n\t\t\t<Todos />\r\n\t\t</Router>\r\n\t</Provider>\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import Home from './pages/Home';\nimport App from './reduxDemo/App'\n//import App from './App';\nimport 'antd-mobile/dist/antd-mobile.css';\n//本文件为入口文件，不可改名\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n// let url = 'https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';//第三次作业基本框架\n// fetch(url, {\n//     method: 'post',\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n// })\n// .then(res=>res.json())\n// .then(res=>console.log(res))\n\n\n\n// import TodoList from './pages/TodoList'\n//import Context from './pages/context';\n\n// import Home from './pages/Home';\n// import Demo from'./components/Demo';\n\n//import Hoc,{Detail} from './pages/Hoc';\n//import Control from './components/Control'\n//import Hook from './pages/Hook'\n\n\n// alt shift + 上下键   复制一行\n// alt + 上下键         移动一行\n// 按住alt ，鼠标点击\n// Ctrl + shift + 左右键，选中整个单词\n// ctrl+shift+L\n// ReactDOM.render(\n//   <Control/>,\n//   document.getElementById('root')\n// );\n\n// ReactDOM.render(\n//   <Demo/>,\n//   document.getElementById('root')\n// );\n\n// ReactDOM.render(\n//   <div><Hoc/>\n//   <Detail/></div>,\n//   document.getElementById('root')\n// );\n// ReactDOM.render(\n//   <Context.Provider value=\"222\">\n//     <Hook />\n//   </Context.Provider>,\n//   document.getElementById('root')\n// )\n// ReactDOM.render(\n//   <TodoList/>,\n//   document.getElementById(\"root\")\n// )\n\n// ReactDOM.render(\n//   <Home/>,\n//   document.getElementById('root')\n// );\n\n\n// let List = (props)=>{\n//   return <ul>\n//     {\n//       props.data.map(\n//         (item)=><li key={item.id}>{item.title}</li>\n//       )\n//     }\n//   </ul>\n// }\n\n// const Buttons = ()=>{\n//   const btns = [1,2,3,4,5];\n//   const handleClick = (num)=>{\n//     //第一个参数是事件对象\n//     console.log(num);\n//   }\n//   return <div>\n//     {\n//       btns.map((item)=>(<button key={item} onClick={()=>handleClick(item)}>{item}</button>)\n//       )\n//     }\n//   </div>\n// }\n\n// class Home extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       data:[]\n//     }\n//   }\n//   componentDidMount(){\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then( ({data}) => {\n//       this.setState({data})\n//     })\n//   }\n//   render(){\n//     const { data } = this.state;\n//     return <div>\n//       <Buttons />\n//       <List data={data}/>\n//     </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Home data='abc'/>,\n//   document.getElementById('root')\n// );\n\n// 组件声明\n// 函数组件\n// UI（展示）组件，木偶组件\n// function App(props){\n//   const { title, id } = props;\n//   return <div>\n//     <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n// // 智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//      super();\n//     //  声明状态\n//      this.state = {\n//        name: new Date().toLocaleString()\n//      }\n//      setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//      },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='app'/>\n//     </div>\n//   }\n// }\n\n\n\n\n\n// let ele = React.createElement(\n//   'h1',\n//   {id:'title'},\n//   React.createElement('div',{},'hello'),\n//   'react'\n// )\n\n// 将jsx对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     // 解构\n//     const { type,props } = eleObj;\n//     // 创建第一层节点\n//     let ele = document.createElement(type);\n//     // 遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop in props) {\n//       console.log(prop)\n//       if(prop == 'children'){\n//         if(typeof props.children == 'string'){\n//             const txtNode = document.createTextNode(props.children);\n//             ele.appendChild(txtNode);\n//             break;\n//         }\n//         // 将第一层节点对象的子元素添加进去\n//         props.children.forEach( child => {\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         })\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n\n//     // 将第一层DOM节点添加到container中\n//     container.appendChild(ele);\n//   }\n// }\n\n\n\n\n\n  // 1、原生JS，DOM操作（jQ）\n  // 2、React：开发效率高、性能高\n  // 3、环境搭建、创建一个项目、运行\n  // 4、JSX语法"],"sourceRoot":""}